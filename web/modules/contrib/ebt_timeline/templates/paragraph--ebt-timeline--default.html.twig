{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
]
%}
{% block paragraph %}
  {% block content %}
    {% if content.field_ebt_timeline_current.0['#markup'] == 'On'  %}
      {% set current = 'timeline-current' %}
    {% else %}
      {% set current = '' %}
    {% endif %}
    <div class="timeline-item {{ current }}">
      <div class="timeline-img">
      </div>
      <div class="timeline-content">
        {% if content.field_ebt_timeline_image.0['#markup'] %}
          <div class="timeline-img-header" style="background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, .6)), url('{{ content.field_ebt_timeline_image.0['#markup'] }}') center center no-repeat;">
            {% if content.field_ebt_timeline_title %}
              <h3>
                {{ content.field_ebt_timeline_title }}
              </h3>
            {% endif %}
          </div>
        {% endif %}
        <div class="timeline-body">
          {% if content.field_ebt_timeline_date %}
            <div class="timeline-date">
              {{ content.field_ebt_timeline_date }}
            </div>
          {% endif %}
          {% if content.field_ebt_timeline_image.0['#markup'] is empty and content.field_ebt_timeline_title %}
            <h3>
              {{ content.field_ebt_timeline_title }}
            </h3>
          {% endif %}
          {% if content.field_ebt_timeline_text %}
            <div class="timeline-text">
              {{ content.field_ebt_timeline_text }}
            </div>
          {% endif %}
          {{ content|without('field_ebt_timeline_date', 'field_ebt_timeline_current', 'field_ebt_timeline_title', 'field_ebt_timeline_image', 'field_ebt_timeline_text') }}
        </div>
      </div>
    </div>
  {% endblock %}
{% endblock paragraph %}
{{ attach_library('core/drupalSettings') }}
